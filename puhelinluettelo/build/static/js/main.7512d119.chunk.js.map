{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","getAll","axios","get","then","response","data","newObject","post","id","put","delete","Filter","props","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","filter","person","name","toLowerCase","includes","map","number","onClick","deletePerson","Notification","message","className","ErrorNotification","error","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","setErrorMessage","useEffect","personService","initialPersons","event","target","preventDefault","personObject","some","window","confirm","find","returnedPersons","setTimeout","catch","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7512d119.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(getAll)\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(getAll)\r\n}\r\n\r\nexport default { getAll, create, update, deleteContact }","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter shown with  <input value={props.newFilter} onChange={props.handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name:  <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst Persons = (props) => {\r\n  return (\r\n    <ul>\r\n      {props.persons.filter(person =>\r\n        person.name.toLowerCase().includes(props.newFilter.toLowerCase())).map(person =>\r\n          <div key={person.name}>\r\n            {person.name} {person.number}\r\n            <button onClick={props.deletePerson} name={person.name} id={person.id}>delete</button>\r\n          </div>\r\n        )\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"message\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ErrorNotification = ({ error }) => {\r\n  if (error === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {error}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n\r\n  const [newNumber, setNewNumber] = useState('')\r\n\r\n  const [newFilter, setNewFilter] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [error, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    if (persons.some((person) => person.name === newName)) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)) {\r\n        personService\r\n          .update(persons.find(person => person.name === newName).id, personObject)\r\n          .then(returnedPersons => {\r\n            setPersons(returnedPersons)\r\n            setMessage(\r\n              `Updated ${newName}`\r\n            )\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setErrorMessage(\r\n              `Person was already removed from server`\r\n            )\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 5000)\r\n            setPersons(persons.filter(person => person.id !== event.target.id))\r\n          })\r\n      }\r\n    } else {\r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setMessage(\r\n            `Added ${newName}`\r\n          )\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const deletePerson = (event) => {\r\n    event.preventDefault()\r\n    if (window.confirm(`Delete ${event.target.name}?`)) {\r\n      personService\r\n        .deleteContact(event.target.id)\r\n        .then(initialPersons => {\r\n          setPersons(initialPersons)\r\n          setMessage(\r\n            `Deleted`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <ErrorNotification error={error} />\r\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\r\n\r\n      <h3>Add a new</h3>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        handleNameChange={handleNameChange}\r\n        newNumber={newNumber}\r\n        handleNumberChange={handleNumberChange} />\r\n\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} newFilter={newFilter} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}